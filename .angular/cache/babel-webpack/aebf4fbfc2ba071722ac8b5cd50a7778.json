{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../service/share.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\n\nfunction EditEmployeeComponent_option_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const depName_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", depName_r1.DepartmentName, \" \");\n  }\n}\n\nexport let EditEmployeeComponent = /*#__PURE__*/(() => {\n  class EditEmployeeComponent {\n    constructor(activeRouter, service, router) {\n      this.activeRouter = activeRouter;\n      this.service = service;\n      this.router = router;\n      this.DepartmentsList = [];\n      this.id = 0;\n      this.newEmployee = {\n        EmployeeID: 1,\n        EmployeeName: \"\",\n        DateOfJoining: \"\",\n        Department: \"\"\n      };\n      this.employeeForm = new FormGroup({\n        'EmployeeName': new FormControl('', [Validators.required]),\n        'Department': new FormControl('', Validators.required),\n        'DateOfJoining': new FormControl('', [Validators.required])\n      });\n    }\n\n    ngOnInit() {\n      this.activeRouter.params.subscribe(paramsData => {\n        this.id = paramsData['id']; // console.log(paramsData);\n\n        this.service.getEmpListbyId(paramsData['id']).subscribe(data => {\n          console.log(data[0].Department);\n          this.employeeForm.patchValue(data[0]);\n          this.employeeForm.value.Department = data[0].Department; // console.log(this.employeeForm.value);\n          // console.log(this.id);\n        });\n      });\n      this.loadDepartmentList();\n    }\n\n    loadDepartmentList() {\n      this.service.getAllDepartmentNames().subscribe(data => {\n        this.DepartmentsList = data;\n      });\n    }\n\n    submituser() {\n      Object.keys(this.employeeForm.controls).forEach(field => {\n        const control = this.employeeForm.get(field);\n\n        if (control instanceof FormControl) {\n          control.markAsTouched({\n            onlySelf: true\n          });\n        }\n      });\n\n      if (this.employeeForm.valid) {\n        this.newEmployee.EmployeeID = this.id;\n        this.newEmployee.EmployeeName = this.employeeForm.value.EmployeeName;\n        this.newEmployee.Department = this.employeeForm.value.Department;\n        this.newEmployee.DateOfJoining = this.employeeForm.value.DateOfJoining;\n\n        if (this.newEmployee.EmployeeName != \"\" && this.newEmployee.Department != \"\" && this.newEmployee.DateOfJoining != \"\") {\n          this.service.updateEmployee(this.newEmployee).subscribe(() => {\n            this.router.navigate(['/employee']);\n          }, () => {\n            alert(\"Something Went Wrong\" + \"\\n\" + \"Please try again.\");\n          });\n        } else {\n          alert(\"Enter all the fields\");\n        }\n      }\n    }\n\n  }\n\n  EditEmployeeComponent.ɵfac = function EditEmployeeComponent_Factory(t) {\n    return new (t || EditEmployeeComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ShareService), i0.ɵɵdirectiveInject(i1.Router));\n  };\n\n  EditEmployeeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditEmployeeComponent,\n    selectors: [[\"app-edit-employee\"]],\n    decls: 23,\n    vars: 3,\n    consts: [[2, \"text-align\", \"center\"], [1, \"container-fluid\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"row\", \"mt-4\", 2, \"display\", \"flex\", \"flex-direction\", \"column\", \"align-content\", \"center\"], [1, \"col-lg-3\"], [\"for\", \"\"], [\"type\", \"text\", \"formControlName\", \"EmployeeName\", 1, \"form-control\"], [\"formControlName\", \"Department\", 1, \"form-control\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"date\", \"formControlName\", \"DateOfJoining\", 1, \"form-control\"], [1, \"row\", \"mt-4\"], [1, \"col-lg-12\", 2, \"text-align\", \"center\"], [\"type\", \"submit\", \"value\", \"Modify\", 1, \"btn\", \"btn-primary\", \"btn-sm\", 2, \"text-align\", \"center\"]],\n    template: function EditEmployeeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\", 0);\n        i0.ɵɵtext(1, \"Edit Employee\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵelementStart(3, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function EditEmployeeComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.submituser();\n        });\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵelementStart(6, \"label\", 5);\n        i0.ɵɵtext(7, \"Employee Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 4);\n        i0.ɵɵelementStart(10, \"label\");\n        i0.ɵɵtext(11, \"Department\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"select\", 7);\n        i0.ɵɵelementStart(13, \"option\");\n        i0.ɵɵtext(14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(15, EditEmployeeComponent_option_15_Template, 2, 1, \"option\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 4);\n        i0.ɵɵelementStart(17, \"label\", 5);\n        i0.ɵɵtext(18, \"Date of Joining\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 10);\n        i0.ɵɵelementStart(21, \"div\", 11);\n        i0.ɵɵelement(22, \"input\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.employeeForm);\n        i0.ɵɵadvance(11);\n        i0.ɵɵtextInterpolate(ctx.employeeForm.value.Department);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.DepartmentsList);\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i3.SelectControlValueAccessor, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i4.NgForOf],\n    styles: [\"\"]\n  });\n  return EditEmployeeComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}